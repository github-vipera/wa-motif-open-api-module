/**
 * Motif Auth Access Control Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Action } from '../model/action';
import { EntitlementResult } from '../model/entitlementResult';
import { ErrorVipera } from '../model/errorVipera';
import { Permission } from '../model/permission';


import { Configuration }                                     from '../configuration';


export interface MyselfServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Retrieves all current user actions
    * Retrieves all current user actions
    */
    getMyselfActions(extraHttpRequestParams?: any): Observable<Array<Action>>;

    /**
    * Retrieves all current user permissions
    * Retrieves all current user permissions
    */
    getMyselfPermissions(extraHttpRequestParams?: any): Observable<Array<Permission>>;

    /**
    * Check if user making the request is entitled to execute the action
    * Check if user making the request is entitled to execute the action
    * @param action Action Name
    */
    isMyselfActionEntitled(action: string, extraHttpRequestParams?: any): Observable<EntitlementResult>;

    /**
    * Check if permission is assigned to the authenticated user
    * Check if permission is assigned to the authenticated user
    * @param permissionComponent Component Name
    * @param permissionAction Action (can be VIEW, EXECUTE, MODIFY or *)
    * @param permissionTarget Method name or *(wildcard)
    */
    isMyselfPermissionEntitled(permissionComponent: string, permissionAction: string, permissionTarget: string, extraHttpRequestParams?: any): Observable<EntitlementResult>;

}
