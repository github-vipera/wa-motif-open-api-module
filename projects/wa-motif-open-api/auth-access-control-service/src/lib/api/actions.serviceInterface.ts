/**
 * Motif Auth Access Control Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Action } from '../model/action';
import { ActionCreate } from '../model/actionCreate';
import { ActionUpdate } from '../model/actionUpdate';
import { ErrorVipera } from '../model/errorVipera';
import { Permission } from '../model/permission';


import { Configuration }                                     from '../configuration';


export interface ActionsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Assigns permission to the action
    * Assigns permission to the action
    * @param action Action Name
    * @param permission 
    */
    assignPermissionToAction(action: string, permission?: Permission, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Creates an Action
    * Creates an Action
    * @param actionCreate 
    */
    createAction(actionCreate?: ActionCreate, extraHttpRequestParams?: any): Observable<Action>;

    /**
    * Deletes an Action
    * Deletes an Action
    * @param action Action Name
    */
    deleteAction(action: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Retrieves a Action
    * Retrieves a Action
    * @param action Action Name
    */
    getAction(action: string, extraHttpRequestParams?: any): Observable<Action>;

    /**
    * Retrieves the permissions with the action
    * Retrieves the permissions with the action
    * @param action Action Name
    */
    getActionPermissions(action: string, extraHttpRequestParams?: any): Observable<Array<Permission>>;

    /**
    * Retrieves all actions
    * Retrieves all actions
    */
    getActions(extraHttpRequestParams?: any): Observable<Array<Action>>;

    /**
    * Removes permission from the action
    * Removes permission from the action
    * @param action Action Name
    * @param permissionComponent Component Name
    * @param permissionAction Action (can be VIEW, EXECUTE, MODIFY or *)
    * @param permissionTarget Method name or *(wildcard)
    */
    removePermissionFromAction(action: string, permissionComponent: string, permissionAction: string, permissionTarget: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Updates an action description
    * Updates an action description
    * @param action Action Name
    * @param actionUpdate 
    */
    updateAction(action: string, actionUpdate?: ActionUpdate, extraHttpRequestParams?: any): Observable<any>;

}
