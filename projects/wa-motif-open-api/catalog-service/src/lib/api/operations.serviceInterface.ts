/**
 * Motif Service Catalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ErrorVipera } from '../model/errorVipera';
import { ServiceOperation } from '../model/serviceOperation';
import { ServiceOperationProperties } from '../model/serviceOperationProperties';


import { Configuration }                                     from '../configuration';


export interface OperationsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Creates service operation
    * Creates service operation
    * @param channel Channel Name (REST,JSON,SMS,...)
    * @param domain Domain Name
    * @param application Application Name
    * @param service Service Name
    * @param serviceOperation 
    */
    createServiceOperation(channel: string, domain: string, application: string, service: string, serviceOperation?: ServiceOperation, extraHttpRequestParams?: any): Observable<ServiceOperation>;

    /**
    * Deletes service operation
    * Deletes service operation
    * @param channel Channel Name (REST,JSON,SMS,...)
    * @param domain Domain Name
    * @param application Application Name
    * @param service Service Name
    * @param operation Operation
    */
    deleteServiceOperation(channel: string, domain: string, application: string, service: string, operation: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Collects service operation infos
    * Collects service operation infos
    * @param channel Channel Name (REST,JSON,SMS,...)
    * @param domain Domain Name
    * @param application Application Name
    * @param service Service Name
    * @param operation Operation
    */
    getServiceOperation(channel: string, domain: string, application: string, service: string, operation: string, extraHttpRequestParams?: any): Observable<ServiceOperation>;

    /**
    * Updates service operation
    * Updates service operation
    * @param channel Channel Name (REST,JSON,SMS,...)
    * @param domain Domain Name
    * @param application Application Name
    * @param service Service Name
    * @param operation Operation
    * @param serviceOperationProperties 
    */
    updateServiceOperation(channel: string, domain: string, application: string, service: string, operation: string, serviceOperationProperties?: ServiceOperationProperties, extraHttpRequestParams?: any): Observable<any>;

}
