/**
 * Motif Web Content Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { BundleStatus } from '../model/bundleStatus';
import { BundleUpdate } from '../model/bundleUpdate';
import { ErrorVipera } from '../model/errorVipera';


import { Configuration }                                     from '../configuration';


export interface BundlesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Delete a Web Content Bundle
    * Delete a Web Content Bundle
    * @param bundleName 
    * @param bundleVersion 
    */
    deleteBundle(bundleName: string, bundleVersion: string, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Downloads a Web Content Bundle
    * Downloads a Web Content Bundle
    * @param bundleName 
    * @param bundleVersion 
    */
    downloadBundle(bundleName: string, bundleVersion: string, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * Retrieves a Web Content Bundle Info
    * Retrieves a Web Content Bundle Info
    * @param bundleName 
    * @param bundleVersion 
    */
    getBundle(bundleName: string, bundleVersion: string, extraHttpRequestParams?: any): Observable<BundleStatus>;

    /**
    * Retrieves Web Content Bundles Info
    * Retrieves Web Content Bundles Info
    */
    getBundlesList(extraHttpRequestParams?: any): Observable<Array<BundleStatus>>;

    /**
    * Publish a Web Content Bundle
    * Publish a Web Content Bundle
    * @param bundleName 
    * @param bundleVersion 
    */
    publishBundle(bundleName: string, bundleVersion: string, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Unpublish a Web Content Bundle
    * Unpublish a Web Content Bundle
    * @param bundleName 
    * @param bundleVersion 
    */
    unpublishBundle(bundleName: string, bundleVersion: string, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Update a Web Content Bundle
    * Update a Web Content Bundle
    * @param bundleName 
    * @param bundleVersion 
    * @param bundleUpdate 
    */
    updateBundle(bundleName: string, bundleVersion: string, bundleUpdate?: BundleUpdate, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Uploads a Web Content Bundle
    * Uploads a Web Content Bundle
    * @param bundle 
    * @param overwrite 
    */
    uploadBundle(bundle: Blob, overwrite?: boolean, extraHttpRequestParams?: any): Observable<object>;

}
