/**
 * Motif Configuration Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ErrorVipera } from '../model/errorVipera';
import { ServiceList } from '../model/serviceList';
import { Setting } from '../model/setting';
import { SettingCreate } from '../model/settingCreate';
import { SettingEntity } from '../model/settingEntity';
import { SettingList } from '../model/settingList';
import { SettingUpdate } from '../model/settingUpdate';


import { Configuration }                                     from '../configuration';


export interface SettingsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Creates Configuration Setting
    * Creates Configuration Setting
    * @param service 
    * @param settingCreate 
    */
    createSetting(service: string, settingCreate?: SettingCreate, extraHttpRequestParams?: any): Observable<SettingEntity>;

    /**
    * Deletes a current property for a service
    * Deletes a current property for a service
    * @param service 
    * @param setting 
    */
    deleteSetting(service: string, setting: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Deletes all current properties for a service.
    * Deletes all current properties for a service.
    * @param service 
    */
    deleteSettings(service: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Retrieves Configurable Services
    * Retrieves Configurable Services
    */
    getServices(extraHttpRequestParams?: any): Observable<ServiceList>;

    /**
    * Retrieves Configuration Setting
    * Retrieves Configuration Setting
    * @param service 
    * @param setting 
    */
    getSetting(service: string, setting: string, extraHttpRequestParams?: any): Observable<SettingEntity>;

    /**
    * Retrieves Configuration Settings
    * Retrieves Configuration Settings
    * @param service 
    */
    getSettings(service: string, extraHttpRequestParams?: any): Observable<SettingList>;

    /**
    * Updates Configuration Setting
    * Updates Configuration Setting
    * @param service 
    * @param setting 
    * @param settingUpdate 
    */
    updateSetting(service: string, setting: string, settingUpdate?: SettingUpdate, extraHttpRequestParams?: any): Observable<any>;

}
