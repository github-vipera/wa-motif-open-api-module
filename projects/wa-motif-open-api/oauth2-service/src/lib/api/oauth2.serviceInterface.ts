/**
 * Motif OAuth2 Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AccessToken } from '../model/accessToken';
import { ErrorVipera } from '../model/errorVipera';
import { OAuthRequest } from '../model/oAuthRequest';
import { RefreshToken } from '../model/refreshToken';


import { Configuration }                                     from '../configuration';


export interface Oauth2ServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Get OAuth2 Access Tokens by Refresh Token
    * Get OAuth2 Access Tokens by Refresh Token
    * @param refreshToken 
    */
    getAccessTokenList(refreshToken: string, extraHttpRequestParams?: any): Observable<Array<AccessToken>>;

    /**
    * Get OAuth2 Refresh Tokens of a specific domain
    * Get OAuth2 Refresh Tokens of a specific domain
    * @param domain Domain Name
    * @param page Page (omit to retrieve all records at once)
    * @param pageSize Page size
    * @param sort Sorting fields
    */
    getRefreshTokenList(domain: string, page?: number, pageSize?: number, sort?: string, extraHttpRequestParams?: any): Observable<Array<RefreshToken>>;

    /**
    * Get User OAuth2 Refresh Tokens
    * Get User OAuth2 Refresh Tokens
    * @param domain Domain Name
    * @param userId User Id
    */
    getUserRefreshTokenList(domain: string, userId: string, extraHttpRequestParams?: any): Observable<Array<RefreshToken>>;

    /**
    * Revokes OAuth2 Token
    * Revokes OAuth2 Token
    * @param oAuthRequest 
    */
    revoke(oAuthRequest?: OAuthRequest, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Validates OAuth2 Token
    * Validates OAuth2 Token
    * @param oAuthRequest 
    */
    validate(oAuthRequest?: OAuthRequest, extraHttpRequestParams?: any): Observable<object>;

}
