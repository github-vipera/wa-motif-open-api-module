/**
 * Motif App Content Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AssetBundleEntity } from '../model/assetBundleEntity';
import { AssetBundleUpdate } from '../model/assetBundleUpdate';
import { ErrorVipera } from '../model/errorVipera';


import { Configuration }                                     from '../configuration';


export interface AssetsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Deletes a version of a bundle
    * Deletes a version of a bundle
    * @param domain Domain Name
    * @param asset Asset Name
    * @param version Version
    */
    deleteAsset(domain: string, asset: string, version: string, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Downloads an asset bundle from the DB
    * Downloads an asset bundle from the DB
    * @param domain Domain Name
    * @param asset Asset Name
    * @param version Version
    */
    downloadAsset(domain: string, asset: string, version: string, extraHttpRequestParams?: any): Observable<Blob>;

    /**
    * Retrieves asset bundles by domain
    * Retrieves asset bundles by domain
    * @param domain Domain Name
    */
    getAssets(domain: string, extraHttpRequestParams?: any): Observable<Array<AssetBundleEntity>>;

    /**
    * Updates the public flag of an asset bundle
    * Updates the public flag of an asset bundle
    * @param domain Domain Name
    * @param asset Asset Name
    * @param version Version
    * @param assetBundleUpdate 
    */
    updateAsset(domain: string, asset: string, version: string, assetBundleUpdate?: AssetBundleUpdate, extraHttpRequestParams?: any): Observable<object>;

    /**
    * Uploads an asset bundle to the server DB
    * Uploads an asset bundle to the server DB
    * @param domain Domain Name
    * @param file Asset bundle in ZIP format
    * @param overwrite Whether to overwrite any existing bundle with same domain, name and version
    * @param publish Whether to publish the bundle immediately
    */
    uploadAsset(domain: string, file: Blob, overwrite?: boolean, publish?: boolean, extraHttpRequestParams?: any): Observable<object>;

}
