/**
 * Motif REST Content Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0.0
 * Contact: info@vipera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ErrorVipera } from '../model/errorVipera';
import { RestContextCreate } from '../model/restContextCreate';
import { RestContextUpdate } from '../model/restContextUpdate';
import { ServiceContext } from '../model/serviceContext';
import { ServiceContextAttribute } from '../model/serviceContextAttribute';


import { Configuration }                                     from '../configuration';


export interface ContextsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    

    /**
    * Creates a REST Context
    * Creates a REST Context
    * @param domain Domain Name
    * @param application Application Name
    * @param restContextCreate 
    */
    createContext(domain: string, application: string, restContextCreate?: RestContextCreate, extraHttpRequestParams?: any): Observable<ServiceContext>;

    /**
    * Deletes a REST Context
    * Deletes a REST Context
    * @param domain Domain Name
    * @param application Application Name
    * @param contextName 
    */
    deleteContext(domain: string, application: string, contextName: string, extraHttpRequestParams?: any): Observable<any>;

    /**
    * Retrieves REST Context
    * Retrieves REST Context
    * @param domain Domain Name
    * @param application Application Name
    * @param contextName 
    */
    getContext(domain: string, application: string, contextName: string, extraHttpRequestParams?: any): Observable<ServiceContext>;

    /**
    * Retrieves REST Contexts list
    * Retrieves REST Contexts list
    * @param domain Domain Name
    * @param application Application Name
    */
    getContexts(domain: string, application: string, extraHttpRequestParams?: any): Observable<Array<ServiceContext>>;

    /**
    * Retrieves REST Context supported attributes
    * Retrieves REST Context supported attributes
    */
    getSupportedAttributes(extraHttpRequestParams?: any): Observable<Array<ServiceContextAttribute>>;

    /**
    * Update a REST Context
    * Update a REST Context
    * @param domain Domain Name
    * @param application Application Name
    * @param contextName 
    * @param restContextUpdate 
    */
    updateContext(domain: string, application: string, contextName: string, restContextUpdate?: RestContextUpdate, extraHttpRequestParams?: any): Observable<any>;

}
